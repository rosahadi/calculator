{"mappings":"C,A,W,I,e,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,gB,C,E,c,C,E,c,e,iB,A,O,gB,A,C,c,S,C,E,G,K,gB,O,e,C,E,C,O,C,G,K,c,C,I,E,a,C,E,A,Q,a,C,E,C,I,E,C,G,E,Q,C,C,E,O,e,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,a,C,E,C,C,E,e,iB,C,e,c,Q,C,Q,S,M,C,O,ECGA,IAAM,YAAc,SAAS,aAAA,CAC3B,wCAGI,YAAc,WACd,YAAY,OAAA,CACd,SAAS,eAAA,CAAgB,YAAA,CAAa,aAAc,QAEpD,SAAS,eAAA,CAAgB,YAAA,CAAa,aAAc,QAExD,EAEA,YAAY,gBAAA,CAAiB,SAAU,aAIvC,IAAM,KAAO,SAAS,gBAAA,CAAiB,cACjC,UAAY,CAAC,IAAK,IAAK,IAAK,OAAI,CAClC,aAAe,CAAA,EAQnB,SAAS,YAAY,CAAC,EACpB,EAAE,cAAF,GAEA,IAAM,EAAQ,SAAS,aAAA,CAAc,YAC/B,EAAa,EAAM,SAAzB,CACM,EAAW,EAAE,MAAA,CAAO,SAA1B,AAGI,AAAa,CAAA,MAAb,EACF,WAAW,GACF,AAAa,MAAb,EACT,mBAAmB,EAAY,GACtB,AAAa,MAAb,GAAoB,AAAa,QAAb,EAC7B,sBAAsB,EAAY,EAAU,GACnC,AAAa,MAAb,EACT,WAAW,GACF,AAAgC,KAAhC,UAAU,OAAA,CAAQ,GAC3B,eAAe,EAAU,EAAY,GAErC,cAAc,EAAU,EAE5B,CAGA,SAAS,WAAW,CAAK,EACvB,EAAM,SAAA,CAAY,GAClB,aAAe,CAAA,CACjB,CAGA,SAAS,mBAAmB,UAAU,CAAE,KAAK,EAC3C,IAAI,SAAW,WACf,SAAW,SAAS,OAAA,CAAQ,KAAM,KAAK,OAAA,CAAQ,KAAM,KAErD,IAAM,SAAW,SAAS,KAAA,CAAM,IAC5B,CAAA,AAAgC,KAAhC,UAAU,OAAA,CAAQ,WAAoB,AAAa,MAAb,QAAa,GACrD,CAAA,SAAW,SAAS,OAAA,CAAQ,KAAM,GADpC,EAII,UACF,CAAA,MAAM,SAAA,CAAY,KAAK,SADzB,CAGF,CAGA,SAAS,sBAAsB,CAAK,CAAE,CAAS,CAAE,CAAK,EAChD,AAAc,MAAd,EACF,EAAM,SAAA,CAAa,AAAA,CAAA,WAAW,GAAS,GAAA,EAAK,QAD9C,GAEyB,QAAd,GACT,CAAA,EAAM,SAAA,CAAa,AAAA,CAAA,AAAoB,GAApB,WAAW,EAAS,EAAI,QADtC,EAAA,EAGP,aAAe,CAAA,CACjB,CAGA,SAAS,WAAW,CAAK,EAClB,eACH,cAAc,IAAK,GACnB,aAAe,CAAA,EAEnB,CAGA,SAAS,eAAe,CAAQ,CAAE,CAAK,CAAE,CAAK,EAC5C,IAAM,EAAW,EAAM,KAAA,CAAM,GAEzB,AAAU,CAAA,KAAV,GAAgB,AAAa,MAAb,GAAoB,AAAgC,KAAhC,UAAU,OAAA,CAAQ,GACxD,EAAM,SAAA,CAAY,EAAM,OAAA,CAAQ,KAAM,GAEtC,cAAc,EAAU,GAE1B,aAAe,CAAA,CACjB,CAGA,SAAS,cAAc,CAAO,CAAE,CAAK,EACnC,EAAM,SAAA,EAAa,CACrB,CAlFA,KAAK,OAAA,CAAQ,AAAC,IACZ,EAAI,gBAAA,CAAiB,QAAS,YAChC,E,G,c,Q","sources":["<anon>","src/main.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequireff1f\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequireff1f\"] = parcelRequire;\n}\nparcelRequire.register(\"8dFP0\", function(module, exports) {\n\"use strict\";\n// Theme Switching\nconst themeSwitch = document.querySelector(\".theme-switch input[type='checkbox']\");\nconst switchTheme = function() {\n    if (themeSwitch.checked) document.documentElement.setAttribute(\"data-theme\", \"dark\");\n    else document.documentElement.setAttribute(\"data-theme\", \"light\");\n};\nthemeSwitch.addEventListener(\"change\", switchTheme);\n// Calculator Logic\nconst keys = document.querySelectorAll(\"#calc span\");\nconst operators = [\n    \"+\",\n    \"-\",\n    \"x\",\n    \"\\xf7\"\n];\nlet decimalAdded = false;\n// Add click event listener to each key\nkeys.forEach((key11)=>{\n    key11.addEventListener(\"click\", handleClick);\n});\n// Handle key clicks\nfunction handleClick(e11) {\n    e11.preventDefault();\n    const input11 = document.querySelector(\".display\");\n    const inputValue11 = input11.innerHTML;\n    const keyValue11 = e11.target.innerHTML;\n    // Handle different key actions\n    if (keyValue11 === \"C\") clearInput(input11);\n    else if (keyValue11 === \"=\") evaluateExpression(inputValue11, input11);\n    else if (keyValue11 === \"%\" || keyValue11 === \"+/-\") applySpecialOperation(inputValue11, keyValue11, input11);\n    else if (keyValue11 === \".\") addDecimal(input11);\n    else if (operators.indexOf(keyValue11) !== -1) handleOperator(keyValue11, inputValue11, input11);\n    else appendToInput(keyValue11, input11);\n}\n// Clear the input\nfunction clearInput(input11) {\n    input11.innerHTML = \"\";\n    decimalAdded = false;\n}\n// Evaluate the expression and display result\nfunction evaluateExpression(expression, input) {\n    let equation = expression;\n    equation = equation.replace(/รท/g, \"/\").replace(/x/g, \"*\");\n    const lastChar = equation.slice(-1);\n    if (operators.indexOf(lastChar) !== -1 || lastChar === \".\") equation = equation.replace(/.$/, \"\");\n    if (equation) input.innerHTML = eval(equation);\n}\n// Apply special operations like % and +/-\nfunction applySpecialOperation(value11, operation11, input11) {\n    if (operation11 === \"%\") input11.innerHTML = (parseFloat(value11) / 100).toString();\n    else if (operation11 === \"+/-\") input11.innerHTML = (parseFloat(value11) * -1).toString();\n    decimalAdded = false;\n}\n// Add decimal point to input\nfunction addDecimal(input11) {\n    if (!decimalAdded) {\n        appendToInput(\".\", input11);\n        decimalAdded = true;\n    }\n}\n// Handle operator inputs\nfunction handleOperator(operator11, value11, input11) {\n    const lastChar11 = value11.slice(-1);\n    if (value11 === \"\" || lastChar11 === \".\" || operators.indexOf(lastChar11) !== -1) input11.innerHTML = value11.replace(/.$/, operator11);\n    else appendToInput(operator11, input11);\n    decimalAdded = false;\n}\n// Append content to the input\nfunction appendToInput(content11, input11) {\n    input11.innerHTML += content11;\n}\n\n});\n\n\nparcelRequire(\"8dFP0\");\n})();\n//# sourceMappingURL=index.d3357354.js.map\n","\"use strict\";\n\n// Theme Switching\nconst themeSwitch = document.querySelector(\n  \".theme-switch input[type='checkbox']\"\n);\n\nconst switchTheme = function () {\n  if (themeSwitch.checked) {\n    document.documentElement.setAttribute(\"data-theme\", \"dark\");\n  } else {\n    document.documentElement.setAttribute(\"data-theme\", \"light\");\n  }\n};\n\nthemeSwitch.addEventListener(\"change\", switchTheme);\n\n// Calculator Logic\n\nconst keys = document.querySelectorAll(\"#calc span\");\nconst operators = [\"+\", \"-\", \"x\", \"รท\"];\nlet decimalAdded = false;\n\n// Add click event listener to each key\nkeys.forEach((key) => {\n  key.addEventListener(\"click\", handleClick);\n});\n\n// Handle key clicks\nfunction handleClick(e) {\n  e.preventDefault();\n\n  const input = document.querySelector(\".display\");\n  const inputValue = input.innerHTML;\n  const keyValue = e.target.innerHTML;\n\n  // Handle different key actions\n  if (keyValue === \"C\") {\n    clearInput(input);\n  } else if (keyValue === \"=\") {\n    evaluateExpression(inputValue, input);\n  } else if (keyValue === \"%\" || keyValue === \"+/-\") {\n    applySpecialOperation(inputValue, keyValue, input);\n  } else if (keyValue === \".\") {\n    addDecimal(input);\n  } else if (operators.indexOf(keyValue) !== -1) {\n    handleOperator(keyValue, inputValue, input);\n  } else {\n    appendToInput(keyValue, input);\n  }\n}\n\n// Clear the input\nfunction clearInput(input) {\n  input.innerHTML = \"\";\n  decimalAdded = false;\n}\n\n// Evaluate the expression and display result\nfunction evaluateExpression(expression, input) {\n  let equation = expression;\n  equation = equation.replace(/รท/g, \"/\").replace(/x/g, \"*\");\n\n  const lastChar = equation.slice(-1);\n  if (operators.indexOf(lastChar) !== -1 || lastChar === \".\") {\n    equation = equation.replace(/.$/, \"\");\n  }\n\n  if (equation) {\n    input.innerHTML = eval(equation);\n  }\n}\n\n// Apply special operations like % and +/-\nfunction applySpecialOperation(value, operation, input) {\n  if (operation === \"%\") {\n    input.innerHTML = (parseFloat(value) / 100).toString();\n  } else if (operation === \"+/-\") {\n    input.innerHTML = (parseFloat(value) * -1).toString();\n  }\n  decimalAdded = false;\n}\n\n// Add decimal point to input\nfunction addDecimal(input) {\n  if (!decimalAdded) {\n    appendToInput(\".\", input);\n    decimalAdded = true;\n  }\n}\n\n// Handle operator inputs\nfunction handleOperator(operator, value, input) {\n  const lastChar = value.slice(-1);\n\n  if (value === \"\" || lastChar === \".\" || operators.indexOf(lastChar) !== -1) {\n    input.innerHTML = value.replace(/.$/, operator);\n  } else {\n    appendToInput(operator, input);\n  }\n  decimalAdded = false;\n}\n\n// Append content to the input\nfunction appendToInput(content, input) {\n  input.innerHTML += content;\n}\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","themeSwitch","document","querySelector","switchTheme","checked","documentElement","setAttribute","addEventListener","keys","querySelectorAll","operators","decimalAdded","handleClick","e11","preventDefault","input11","inputValue11","innerHTML","keyValue11","target","clearInput","evaluateExpression","applySpecialOperation","addDecimal","indexOf","handleOperator","appendToInput","expression","input","equation","replace","lastChar","slice","eval","value11","operation11","parseFloat","toString","operator11","lastChar11","content11","forEach","key11"],"version":3,"file":"index.d3357354.js.map"}